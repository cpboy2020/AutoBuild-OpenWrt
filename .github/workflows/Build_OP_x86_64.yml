#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Build_x86_64

on: 
  release:
    types: [published]

  # 编辑触发
  #push:
    #branches: 
      #- master

  # 定时触发()
  #schedule:
  #  - cron: 0 8 * * 5
  
  watch:
    types: [started]
    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout 校验本地文件
      uses: actions/checkout@master

    - name: Initialization environment 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip lib32gcc1 libc6-dev-i386 subversion flex node-uglify gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils  libelf-dev autoconf automake libtool autopoint device-tree-compiler libuv-dev python3.6 zlib1g-dev upx-ucl node-uglify antlr3 gperf
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code 克隆源代码
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
        #SSH_ACTIONS 开启SSH连接
        #UPLOAD_BIN_DIR上传BIN目录
        #UPLOAD_FIRMWARE上传固件目录
        #SSH_ACTIONS: false
        UPLOAD_BIN_DIR: true
        UPLOAD_FIRMWARE: true
        TZ: Asia/Shanghai
        
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        sed -i '5s/#//' feeds.conf.default
        
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Import external feeds
      working-directory: ./openwrt
      run: |
        #git clone https://github.com/Lienol/openwrt-package package/lienol
        #git clone https://github.com/kenzok8/openwrt-packages package/openwrt-packages
        #passwall 3.6-40 版本有一个选项是“使用ipv6” 可以让域名解析为ipv6进行连接
        git clone https://github.com/NANXIAO1971/passwall package/passwall
        git clone https://github.com/kenzok8/small package/small
        git clone https://github.com/destan19/OpenAppFilter package/OpenAppFilter
        #clash项目 依赖
        #bash、coreutils、coreutils-nohup、coreutils-base64、ipset、iptables、luci、luci-base、libustream-openssl、libopenssl
        #curl、wget、jsonfilter、ca-certificates

        git clone https://github.com/frainzy1477/luci-app-clash package/luci-app-clash
        
        #OpenClash项目依赖
        #luci、luci-base、iptables、dnsmasq-full、coreutils、coreutils-nohup
        #bash、curl、jsonfilter、ca-certificates、ipset、ip-full、iptables-mod-tproxy、kmod-tun(TUN模式)、luci-compat(Luci-19.07)
        
        git clone https://github.com/vernesong/OpenClash package/openclash
        # Clone OpenClash项目
        #mkdir package/luci-app-openclash
        #cd package/luci-app-openclash
        #git init
        #git remote add -f origin https://github.com/vernesong/OpenClash.git
        #git config core.sparsecheckout true
        #echo "luci-app-openclash" >> .git/info/sparse-checkout
        #git pull origin master
        #git branch --set-upstream-to=origin/master master
        
        git clone https://github.com/tty228/luci-app-serverchan package/luci-app-serverchan
        git clone https://github.com/rufengsuixing/luci-app-adguardhome package/luci-app-adguardhome
        #svn co https://github.com/kang-mk/openwrt-app-package/trunk/luci-app-eqos package/luci-app-eqos
        git clone https://github.com/garypang13/luci-app-eqos package/luci-app-eqos4
        git clone https://github.com/xiaoqingfengATGH/luci-theme-infinityfreedom package/luci-theme-infinityfreedom
        #git clone "your_github_link" package/"your_folder_name"   
        # 再次更新并安装源
        ./scripts/feeds clean
        ./scripts/feeds update -a && ./scripts/feeds install -a

    - name: Configuration Customization - Build_x86_64
      env:
        CONFIG_FILE: 'x86_64.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package 下载软件包
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware 编译固件
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        echo "::set-output name=status::success"
    
    - name: 上传BIN目录
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin_Lean_passwall_${{ env.FILENAME }}
        path: openwrt/bin
        
    #- name : Upload artifact
      #uses: actions/upload-artifact@master
      #with:
        #name: OpenWrt
        #path: openwrt/bin

    - name: 整理文件
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find openwrt/bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/
          find openwrt/bin/targets/ -name "*uefi*img*" | xargs -i mv -f {} ./artifact/
    - name: 上传固件
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt_firmware_Lean_passwall_${{ env.FILENAME }}
        path: ./artifact/
        
