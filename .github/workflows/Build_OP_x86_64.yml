#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Build_x86_64

on: 
  release:
    types: [published]

  # 编辑触发
  #push:
    #branches: 
      #- master

  # 定时触发()
  #schedule:
  #  - cron: 0 8 * * 5
  
  watch:
    types: [started]
    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout 校验本地文件
      uses: actions/checkout@master

    - name: Initialization environment 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip lib32gcc1 libc6-dev-i386 subversion flex node-uglify gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils  libelf-dev autoconf automake libtool autopoint device-tree-compiler libuv-dev python3.6 zlib1g-dev upx-ucl node-uglify antlr3 gperf
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code 克隆源代码
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
        #REPO_URL: https://github.com/project-openwrt/openwrt
        #REPO_BRANCH: openwrt-18.06 
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        sed -i '5s/#//' feeds.conf.default
   
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a

    - name: Import external feeds
      working-directory: ./openwrt
      run: |
                        
    - name: 自定义插件及主题--并修改插件分类。
      #working-directory: ./openwrt
      run: |
        cd openwrt
        chmod +x ./yuncpboydiy.sh && ./yuncpboydiy.sh
               
    #- name: Prepare feeds
      #run: cd openwrt && ./prepareCompile.sh
    
    - name: Configuration Customization - Build_x86_64
      env:
        CONFIG_FILE: 'x86_64.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package 下载软件包
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware Multi-thread compile 多线程编译固件
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
          
    - name: Single-thread compile 单线程编译固件
      working-directory: ./openwrt
      if: failure()
      run: |
        make -j1 V=s
          
    - name: Assemble artifact
      run: |
        rm -rf ./artifact/
        mkdir -p ./artifact/
        find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/
        find openwrt/bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/
    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt-x86-64 firmware
        path: ./artifact/
